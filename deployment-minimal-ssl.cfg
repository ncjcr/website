# Minimal deployment buildout with SSL
# ====================================
#
# Uses nginx for proxying and basic caching, and does not use memcached for
# sessions or RelStorage caching

[buildout]
parts =
    zeo
    instance1
    instance2

    backup
    backupcronjob
    zeopackcronjob

    supervisor
    supervisor-crontab

    ${buildout:nginx-parts}

extends =
    packages.cfg
    buildout.d/passwords.cfg
    buildout.d/nginx.cfg

# Fail buildout if any package is not pinned
allow-picked-versions = false

# Create local caches so that we get completely self-contained buildouts.
# These directories must be created before the buildout is run the first time.

#eggs-directory = ${buildout:directory}/var/cache/eggs
#download-cache = ${buildout:directory}/var/cache/downloads
#extends-cache  = ${buildout:directory}/var/cache/extends
eggs-directory = var/cache/eggs
download-cache = var/cache/downloads
extends-cache  = var/cache/extends

# If you release internal eggs to an internal server, you should reference
# a page that lists all those eggs here. The easiest way is to allow scp
# access to a directory that's served by nginx or Apache and enable automatic
# directory indexing/listing of that directory. Then use ./bin/mkrelease to
# release your internal eggs here, and add to the [versions] block in
# versions.cfg.
 
#find-links = https://jcrweb.new.ox.ac.uk/jcr/eggsindex/

# Packages to check out/update when buildout is run
# Clear this out if you want to stick to internally released eggs - see above.
auto-checkout = *

# Make sure buildout never attempts to update packages automatically for
# production use.
always-checkout = false

# Host names/IP addresses. See below for corresponding ports.
[hosts]
# The public hostname used in virtual hosting, i.e. the public facing domain
public          = jcr.new.ox.ac.uk
# ZEO
zeo             = localhost
# The IP addresses of each Zope instance
instance1       = 127.0.0.1
instance2       = 127.0.0.1
# Where to find the syslog deamon to log to
syslog          = localhost
# The hostname that supervisord binds to
supervisor      = localhost

# Port corresponding to the hostnames above. Note that to bind to ports
# < 1024, you will need to run ./bin/supervisord as root!
[ports]
http            = 80
https           = 443
zeo             = 8100
instance1       = 8001
instance2       = 8002
syslog          = 514
supervisor      = 9001

[users]
# Process owner for nginx and Zope
nginx            = jcrwebsite
zope-process     = jcrwebsite
zeo              = jcrwebsite

# System user accounts for Zope root admin and Supervisor
zope-admin       = admin
supervisor-admin = admin

[groups]
nginx            = www

[limits]
# How many open files are allowed? This affects the number of concurrent
# connections. On some operating systems, this is set on startup per user
open-files = 100
# Timeout of inactivity for Beaker sessions
session-timeout = 600

[sites]
# Plone site ids - used in virtual hosting
main = jcr.new.ox.ac.uk

# Override the Nginx configuration to use the nginx-minimal.conf template
[nginx-config]
recipe = collective.recipe.template
input = ${buildout:directory}/buildout.d/templates/nginx-minimal.conf
output = ${buildout:directory}/etc/nginx.conf

[zeo]
recipe = plone.recipe.zeoserver
zeo-address = ${hosts:zeo}:${ports:zeo}
effective-user = ${users:zeo}

# Zope instance template
[instance]
recipe = plone.recipe.zope2instance
user = ${users:zope-admin}:${passwords:zope-admin}
debug-mode = off
verbose-security = off
effective-user = ${users:zope-process}
http-fast-listen = off
zserver-threads = 2
zodb-cache-size = 10000
eggs =
    ${eggs:main}

# Configure logging to syslog
event-log-custom = 
    <syslog>
        level all
        format zope[%(process)s]: [%(levelname)s] %(name)s: %(message)s
        facility local1
        address ${hosts:syslog}:${ports:syslog}
    </syslog>

# Configure BLOB storage
shared-blob = on

# ZEO
zeo-client = on
zeo-address = ${ports:zeo}

[instance1]
<= instance
http-address = ${hosts:instance1}:${ports:instance1}

[instance2]
<= instance
http-address = ${hosts:instance2}:${ports:instance2}

[backup]
recipe = collective.recipe.backup

[zeopack-crontab]
recipe = z3c.recipe.usercrontab
times = 0 4 * * 5
command = ${buildout:directory}/bin/zeopack

[backup-crontab]
recipe = z3c.recipe.usercrontab
times = 0 2 * * *
command = ${buildout:directory}/bin/backup

# Install supervisor, which runs on port 9001
# Run: ``bin/supervisord``
# Run: ``bin/supervisorctl --help``
[supervisor]
recipe = collective.recipe.supervisor
port = ${ports:supervisor}
user = ${users:supervisor-admin}
password = ${passwords:supervisor-admin}
serverurl = http://${hosts:supervisor}:${ports:supervisor}
programs =
    5  zeo        ${buildout:directory}/bin/zeo [fg] true ${users:zeo}
    10 instance1  ${buildout:directory}/bin/instance1 [console] true ${users:zope-process}
    10 instance2  ${buildout:directory}/bin/instance2 [console] true ${users:zope-process}
    40 nginx      ${nginx-build:location}/sbin/nginx true

[supervisor-crontab]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:bin-directory}/supervisord
