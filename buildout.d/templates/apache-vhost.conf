# Based on http://plone.org/documentation/kb/plone-apache

<VirtualHost *:${ports:http}>
  ServerName ${hosts:public}
  #ServerAlias
  ServerAdmin webmaster@${hosts:public}

  CustomLog ${apache-vhost:logs}/${hosts:public}-access_log combined
  ErrorLog ${apache-vhost:logs}/${hosts:public}-error_log

  # DocumentRoot should be there in case of failure
  DocumentRoot ${apache-vhost:document-root}
  <Directory "${apache-vhost:document-root}">
    AllowOverride All
    Order allow,deny
    Allow from all
  </Directory>

  <IfModule apparmor_module>
    # AppArmor Hat
    AADefaultHatName Apache2Vhost_${hosts:public}
  </IfModule>

  <IfModule alias_module>
    # Redirect everything to HTTPS. Note the necessary trailing slash
    Redirect permanent / https://${hosts:public}/
  </IfModule>
</VirtualHost>

<IfDefine SSL>
<IfDefine !NOSSL>
<IfModule mod_ssl.c>
<VirtualHost *:${ports:https}>
  # Enable SSL
  Include /etc/apache2/conf.d/ssl.conf

  ServerName ${hosts:public}
  ServerAdmin webmaster@${hosts:public}

  CustomLog ${apache-vhost:logs}/${hosts:public}-access_log combined
  ErrorLog ${apache-vhost:logs}/${hosts:public}-error_log

  # DocumentRoot should be there in case of failure
  DocumentRoot ${apache-vhost:document-root}
  <Directory "${apache-vhost:document-root}">
    AllowOverride All
    Order allow,deny
    Allow from all
  </Directory>

  <IfModule apparmor_module>
    # AppArmor Hat
    AADefaultHatName Apache2Vhost_${hosts:public}
  </IfModule>

  <IfModule mod_shib>
    <Location />
      # applicationId corresponds to id of ApplicationOverride from
      # Shibboleth config file: /etc/shibboleth/shibboleth2.xml
      ShibRequestSetting applicationId ${hosts:public}

      # Lazy Shibboleth session
      ShibRequireSession Off
      AuthType shibboleth
      Require shibboleth

      # Populate Shibboleth attributes as HTTP headers, so that
      # proxied Zope instance has access to REMOTE_USER headers
      # and others.
      ShibUseHeaders On
    </Location>
  </IfModule>

  <IfModule proxy_module>
    ProxyVia On

    # Prevent the webserver from being used as proxy
    <LocationMatch "^[^/]">
      Deny from all
    </LocationMatch>
  </IfModule>

  <IfModule rewrite_module>
    RewriteEngine On

    # Use RewriteLog to debug problems with the rewrite rules. Disable
    # it after error is found or harddisk will be filled *very fast*
    # RewriteLog "${buildout:var-dir}/rewrite_log"
    # RewriteLogLevel 2

    #RewriteRule ^/login /Shibboleth.sso/Login [L, R]

    # This is the 'panic' error message page. HAProxy will redirect here
    # if all nodes are down. Other parts of the stack may choose to
    # redirect to this URL as well.
    RewriteRule ^${urls:fallback} - [L]

    # Supervisord
    RewriteRule ^/supervisor$ /supervisor/ [R]
    RewriteRule ^/supervisor(.*)$ ${supervisor:serverurl}$1 [L,P]

    # Zope root
    RewriteRule ^/zope(.*)$ \
      http://${hosts:apache-backend}:${ports:apache-backend}/VirtualHostBase/https/%{SERVER_NAME}:${ports:https}/VirtualHostRoot/_vh_zope$1 [L,P]

    # Rewrite any access to the zope server using a proxy [P] and add
    # the VMH magic keywords. Use %{SERVER_NAME} instead of
    # ${hosts:public} to avoid busting the ServerAlias. Using
    # %{HTTP_HOST} is wrong because it may contain the port.
    RewriteRule ^/(.*) \
      http://${hosts:apache-backend}:${ports:apache-backend}/VirtualHostBase/https/%{SERVER_NAME}:${ports:https}/${sites:main}/VirtualHostRoot/$1 [L,P]
  </IfModule>
</VirtualHost>
</IfModule>
</IfDefine>
</IfDefine>
